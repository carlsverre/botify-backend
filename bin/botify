#!/usr/bin/env python

import sys, os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(os.path.realpath(__file__)), '..')))

import signal
import threading

from botify import log
from botify.util.thread_manager import ThreadManager
from botify.server import WebServer
from botify.api import pool
from botify import schema
from botify.workers.botbot import BotBot
from botify.workers.user_input_parser import UserInputParser

if __name__ == "__main__":
    log.setup()
    schema.setup()

    stopping = threading.Event()
    manager = ThreadManager()

    def cleanup(*a):
        stopping.set()

    # setup signal handlers
    signal.signal(signal.SIGINT, cleanup)
    signal.signal(signal.SIGTERM, cleanup)

    pool.setup(manager)
    manager.add(WebServer, { "host": "0.0.0.0", "port": 9000 })

    botbot_lock = threading.Lock()
    for i in range(3):
        manager.add(BotBot, { "dequeue_lock": botbot_lock, "index": i })
    manager.add(UserInputParser, {})

    try:
        manager.start(timeout=10)
    except Exception as e:
        print("Failed to start Botify.")
        print(e)
    else:
        print("Server running at http://0.0.0.0:9000")
        while not stopping.wait(10):
            manager.check()
            pool.status()
    finally:
        manager.close(block=True)
